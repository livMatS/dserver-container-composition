---
version: '3.8'

volumes:
  mongodb_data: {}
  postgres_data: {}
  cert_data: {}

services:
  mongodb:
    image: mongo:latest
    restart: always
    volumes:
      - mongodb_data:/data/db

  postgres:
    image: postgres:latest
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data

  # assign valid hostnames without undersore, see
  # * https://github.com/minio/minio/issues/13025
  # * https://github.com/docker/compose/issues/472
  dtool_lookup_server:
    hostname: dtool-lookup-server
    image: jotelha/dtool-lookup-server:latest
    restart: always
    depends_on:
      mongodb:
        condition: service_started
      postgres:
        condition: service_started
      token_generator_ldap:
        condition: service_started
    command: /start
    # needs health check without authorization
    # healthcheck:
    #  test: ["CMD", "curl", "--insecure", "-f", "https://localhost:5000/config/info"]
    #  interval: 30s
    #  timeout: 20s
    #  retries: 3
    #  start_period: 30s
    volumes:
      - type: volume
        source: cert_data
        target: /certs
        read_only: true
      - type: bind
        source: ./keys/dtool_lookup_server
        target: /run/secrets
        read_only: true

  token_generator_ldap:
    hostname: token-generator-ldap
    image: jotelha/dtool-token-generator-ldap:latest
    restart: always
    command: /start
    volumes:
      - type: volume
        source: cert_data
        target: /certs
        read_only: true
      - type: bind
        source: ./keys/token_generator_ldap
        target: /run/secrets
        read_only: true

  dtool_lookup_webapp:
    hostname: dtool-lookup-webapp
    build:
      context: .
      dockerfile: ./compose/dtool_lookup_webapp/Dockerfile
    image: jotelha/dtool-lookup-webapp
    restart: always
    depends_on:
      dtool_lookup_server:
        condition: service_started
    volumes:
      - type: bind
        source: ./volumes/webapp/templates
        target: /etc/nginx/templates
        read_only: true
      - type: volume
        source: cert_data
        target: /certs
        read_only: true
    healthcheck:
      test: ["CMD", "curl", "--insecure", "-f", "https://localhost:443"]
      interval: 30s
      timeout: 20s
      retries: 3
      start_period: 60s      

  # initialize volumes
  volume_init:
    hostname: volume-init
    build:
      context: .
      dockerfile: ./compose/volume-init/Dockerfile
      args:
        version: latest
    image: volume-init:latest
    restart: "on-failure"
    volumes:
      - type: volume
        source: cert_data
        target: /certs

  # outwards reverse proxy
  web:
    image: nginx:latest
    restart: always
    volumes:
      - type: bind
        source: ./volumes/web/templates
        target: /etc/nginx/templates
        read_only: true
      - type: volume
        source: cert_data
        target: /certs
        read_only: true
    depends_on:
      dtool_lookup_server:
        condition: service_started
      dtool_lookup_webapp:
        condition: service_started
      token_generator_ldap:
        condition: service_started
    command: [nginx-debug, '-g', 'daemon off;']
