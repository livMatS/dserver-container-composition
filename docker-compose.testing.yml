version: '3.8'

services:
  dtool_lookup_client:
    hostname: dtool-lookup-client
    image: jotelha/dtool-lookup-client:latest
    restart: on-failure
    depends_on:
      sambaserver:
        condition: service_healthy
      s3server:
        condition: service_healthy
      s3server_init:
        condition: service_completed_successfully
    command: /start

  dtool_lookup_server:
    depends_on:
      ldap:
        condition: service_started

  token_generator_ldap:
    depends_on:
      - ldap

  ldap:
    image: bitnami/openldap:latest
    restart: always
    env_file:
      - ./envs/production/ldap
    expose:
      - "1389"

  sambaserver:
    image: dperson/samba:latest
    restart: always
    command: ["-p", "-S", "-w", "WORKGROUP", "-s", "sambashare;/share;yes;no;yes"]
    expose:
      - "139"
      - "445"
    ports:
      - "4445:445"

  s3server:
    image: minio/minio:latest
    command: server /data --console-address ":9001" --certs-dir /certs/
    restart: always
    depends_on:
      omgwtfssl-s3server:
        condition: service_completed_successfully
    env_file:
      - ./envs/production/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    secrets:
      - source: minio_access_key
        target: access_key
      - source: minio_secret_key
        target: secret_key
    volumes:
      - type: volume
        source: cert_data
        target: /certs
        read_only: True
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    # make host ports accessible from within container
    extra_hosts:
      - "host.docker.internal:host-gateway"

  # initialize volumes
  volume_init:
    hostname: volume-init
    build:
      context: .
      dockerfile: ./compose/volume-init/Dockerfile
      args:
        version: latest
    image: volume-init:latest
    restart: "on-failure"
    volumes:
      - cert_data:/certs

  # initialize s3-compatible minio server 
  s3server_init:
    hostname: s3server-init
    build:
      context: .
      dockerfile: ./compose/minio-init/Dockerfile
      args:
        version: latest
    image: minio-init:latest
    restart: "on-failure"
    depends_on:
      s3server:
        condition: service_healthy
    secrets:
      - source: minio_access_key
        target: access_key
      - source: minio_secret_key
        target: secret_key

  omgwtfssl-dtool-lookup-server:
    depends_on:
      volume_init:
        condition: service_completed_successfully

  omgwtfssl-s3server:
    image: paulczar/omgwtfssl:latest
    restart: "no"
    env_file:
      - ./envs/production/omgwtfssl_s3server
    depends_on:
      omgwtfssl-dtool-lookup-server:
        condition: service_completed_successfully
    volumes:
      - cert_data:/certs

secrets:
  minio_access_key:
    file: secrets/minio/access_key
  minio_secret_key:
    file: secrets/minio/secret_key
